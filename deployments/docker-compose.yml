version: "3"
services:
  problemreport:
    image: "iot-for-tillgenglighet/api-problemreport:latest"
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
    restart: always
    depends_on:
      - rabbitmq
      - postgresdb
    links:
      - rabbitmq
      - postgresdb
    environment:
      PROBLEMREPORT_DB_HOST: "postgresdb"
      PROBLEMREPORT_DB_USER: "testuser"
      PROBLEMREPORT_DB_NAME: "problemreport"
      PROBLEMREPORT_DB_PASSWORD: "testpass"
      PROBLEMREPORT_DB_SSLMODE: "disable"
      PROBLEMREPORT_API_PORT: "8383"
      RABBITMQ_HOST: "rabbitmq"

    ports:
      - "8383:8383"

  federation:
    build:
      context: ..
      dockerfile: ./test/federation/federation-dockerfile
    restart: always
    depends_on:
      - problemreport
    environment:
      API_GQL_FEDERATION_PORT: '8989'
      API_GQL_FEDERATION_SVCS: 'problemreport:8383'
    ports:
      - '8989:8989'

  postgresdb:
    image: "iot-for-tillgenglighet/testdb-postgres:latest"
    build:
      context: ..
      dockerfile: ./test/database/testdb-dockerfile
    restart: always
    environment:
      POSTGRES_DB: "problemreport"
      POSTGRES_USER: "testuser"
      POSTGRES_PASSWORD: "testpass"
    ports:
      - "5432"

  rabbitmq:
    image: "bitnami/rabbitmq:3.8"
    ports:
      - "4369"
      - "5672"
      - "25672"
      - "15672"
    volumes:
      - "rabbitmq_data:/bitnami"

volumes:
  rabbitmq_data:
    driver: local
